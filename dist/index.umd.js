!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(require("inquirer"),require("node-wifi"),require("lodash"),require("jsonfile"),require("path"),require("fs")):"function"==typeof define&&define.amd?define(["inquirer","node-wifi","lodash","jsonfile","path","fs"],n):n(e.inquirer,e.wifi,e.lodash,e.jsonfile,e.path,e.fs)}(this,function(e,n,t,r,o,i){n=n&&n.hasOwnProperty("default")?n.default:n,t=t&&t.hasOwnProperty("default")?t.default:t;const u=function(){function e(){}return e.prototype.then=function(n,t){const r=new e,o=this.s;if(o){const e=1&o?n:t;if(e){try{c(r,1,e(this.v))}catch(e){c(r,2,e)}return r}return this}return this.o=function(e){try{const o=e.v;1&e.s?c(r,1,n?n(o):o):t?c(r,1,t(o)):c(r,2,o)}catch(e){c(r,2,e)}},r},e}();function c(e,n,t){if(!e.s){if(t instanceof u){if(!t.s)return void(t.o=c.bind(null,e,n));1&n&&(n=t.s),t=t.v}if(t&&t.then)return void t.then(c.bind(null,e,n),c.bind(null,e,2));e.s=n,e.v=t;const r=e.o;r&&r(e)}}function s(e){return e instanceof u&&1&e.s}"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));var f=o.join(__dirname,"../data/accessPoints.json");!function(){try{var a=function(e,n,t){for(var r;;){var o=e();if(s(o)&&(o=o.v),!o)return i;if(o.then){r=0;break}var i=t();if(i&&i.then){if(!s(i)){r=1;break}i=i.s}if(n){var f=n();if(f&&f.then&&!s(f)){r=2;break}}}var a=new u,h=c.bind(null,a,2);return(0===r?o.then(d):1===r?i.then(l):f.then(m)).then(void 0,h),a;function l(r){i=r;do{if(n&&(f=n())&&f.then&&!s(f))return void f.then(m).then(void 0,h);if(!(o=e())||s(o)&&!o.v)return void c(a,1,i);if(o.then)return void o.then(d).then(void 0,h);s(i=t())&&(i=i.v)}while(!i||!i.then);i.then(l).then(void 0,h)}function d(e){e?(i=t())&&i.then?i.then(l).then(void 0,h):l(i):c(a,1,i)}function m(){(o=e())?o.then?o.then(d).then(void 0,h):d(o):c(a,1,i)}}(function(){return!0},void 0,function(){return Promise.resolve(function(){try{return Promise.resolve(e.prompt([{type:"number",name:"numero_nodo",message:"Ingrese numero del nodo a analizar:"}])).then(function(e){return e.numero_nodo})}catch(e){return Promise.reject(e)}}()).then(function(e){return Promise.resolve(function(){try{return n.init({iface:null}),Promise.resolve(n.scan()).then(function(e){return t.map(e,function(e){return{ssid:e.ssid,mac:e.mac,channel:e.channel,signal_level:e.signal_level,quality:e.quality}})})}catch(e){return Promise.reject(e)}}()).then(function(n){console.log("nNodo: ",e),console.log("networks: ",n),function(e,n,t){void 0===t&&(t="w");try{Promise.resolve(r.writeFile(o.join(__dirname,"../data/",n),e,{flag:t})).then(function(){})}catch(e){return Promise.reject(e)}}(n,t.toString(e)+".json"),function(e,n){try{Promise.resolve(function(){try{var e={},n=function(){if(i.existsSync(f))return Promise.resolve(r.readFile(f)).then(function(n){e=n})}();return Promise.resolve(n&&n.then?n.then(function(){return e}):e)}catch(e){return Promise.reject(e)}}()).then(function(o){return t.forEach(e,function(e){t.defaults(o,{mac:{ssid:e.ssid,mac:e.mac,channel:e.channel,node:n,provider:"",ip:""}})}),Promise.resolve(function(e){try{return Promise.resolve(r.writeFile(f,e)).then(function(){return e})}catch(e){return Promise.reject(e)}}(o)).then(function(){return o})})}catch(e){return Promise.reject(e)}}(n,e)})})});Promise.resolve(a&&a.then?a.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}()});
//# sourceMappingURL=index.umd.js.map
