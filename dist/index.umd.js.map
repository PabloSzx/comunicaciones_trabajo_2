{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import * as inquirer from \"inquirer\";\r\nimport wifi from \"node-wifi\";\r\n\r\ninquirer\r\n  .prompt([\r\n    {\r\n      type: \"input\",\r\n      name: \"first_name\",\r\n      message: \"What's your first name\",\r\n    },\r\n  ])\r\n  .then(answers => {\r\n    // Use user feedback for... whatever!!\r\n    console.log(\"answers: \", answers);\r\n    wifi.init({\r\n      iface: null, // network interface, choose a random wifi interface if set to null\r\n    });\r\n\r\n    wifi.scan(function(err, networks) {\r\n      if (err) {\r\n        console.log(err);\r\n      } else {\r\n        console.log(networks);\r\n        /*\r\n              networks = [\r\n                  {\r\n                    ssid: '...',\r\n                    bssid: '...',\r\n                    mac: '...', // equals to bssid (for retrocompatibility)\r\n                    channel: <number>,\r\n                    frequency: <number>, // in MHz\r\n                    signal_level: <number>, // in dB\r\n                    quality: <number>, // same as signal level but in %\r\n                    security: 'WPA WPA2' // format depending on locale for open networks in Windows\r\n                    security_flags: '...' // encryption protocols (format currently depending of the OS)\r\n                    mode: '...' // network mode like Infra (format currently depending of the OS)\r\n                  },\r\n                  ...\r\n              ];\r\n              */\r\n      }\r\n    });\r\n  });\r\n"],"names":["type","name","message","then","answers","console","log","wifi","init","iface","scan","err","networks"],"mappings":"wRAIU,CACN,CACEA,KAAM,QACNC,KAAM,aACNC,QAAS,4BAGZC,cAAKC,GAEJC,QAAQC,IAAI,YAAaF,GACzBG,EAAKC,KAAK,CACRC,MAAO,OAGTF,EAAKG,KAAK,SAASC,EAAKC,GAClBD,EACFN,QAAQC,IAAIK,GAEZN,QAAQC,IAAIM"}